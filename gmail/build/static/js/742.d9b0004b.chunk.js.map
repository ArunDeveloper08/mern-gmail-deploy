{"version":3,"file":"static/js/742.d9b0004b.chunk.js","mappings":"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","sources":["component/NoMails.jsx","component/Email.jsx","component/constant/Constant.js","services/api.js","hooks/useApi.jsx","services/api.url.js"],"sourcesContent":["import { Box, Divider, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst NoMails = ({ message }) => {\r\n  return (\r\n    <Box\r\n      sx={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" , marginTop:\"20px\", opacity:\"0.8px\"}}\r\n    >\r\n      <Typography>{message.heading}</Typography>\r\n      <Typography>{message.subHeading}</Typography>\r\n      <Divider />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoMails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useOutletContext, useParams } from \"react-router-dom\";\r\nimport { API_URLS } from \"../services/api.url\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { Box, Checkbox, List, Typography, styled } from \"@mui/material\";\r\nimport { CheckBox, DeleteOutline, Star, StarBorder } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { routes } from \"../routes/routes\";\r\nimport NoMails from \"./NoMails\";\r\nimport { EMPTY_TABS } from \"./constant/Constant\";\r\n\r\nconst Text = styled(Typography)`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Email = () => {\r\n  const navigate = useNavigate();\r\n  const { openDrawer } = useOutletContext();\r\n  const toggleStarredService = useApi(API_URLS.toggleStarredMails);\r\n  const { type } = useParams();\r\n  const [selectedEmails, setSelectedEmails] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const getEmailsService = useApi(API_URLS.getEmailFromType);\r\n  const moveEmailsToBinServices = useApi(API_URLS.moveEmailstoBin);\r\n  useEffect(() => {\r\n    getEmailsService.call({}, type);\r\n  }, [type, refresh]);\r\n\r\n  const selectedAllEmails = (e) => {\r\n    if (e.target.checked) {\r\n      const emails = getEmailsService?.response?.map((email) => email._id);\r\n      setSelectedEmails(emails);\r\n    } else {\r\n      setSelectedEmails([]);\r\n    }\r\n  };\r\n  const deleteSelectedEmails = (e) => {\r\n    if (type === \"bin\") {\r\n    } else {\r\n      moveEmailsToBinServices?.call(selectedEmails);\r\n    }\r\n    setRefresh((prev) => !prev);\r\n  };\r\n  const toggleStarredMails = (email) => {\r\n    toggleStarredService?.call({ id: email._id, value: !email.starred });\r\n    setRefresh((prev) => !prev);\r\n  };\r\n  return (\r\n    <Box\r\n      style={\r\n        openDrawer\r\n          ? { marginLeft: 250, width: \"calc(100% - 250px)\" }\r\n          : { width: \"100%\" }\r\n      }\r\n    >\r\n      <Box\r\n        style={{\r\n          padding: \"20px 10px 0 10px \",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Checkbox size=\"small\" onChange={(e) => selectedAllEmails(e)} />\r\n        <DeleteOutline onClick={(e) => deleteSelectedEmails(e)} />\r\n      </Box>\r\n      <List>\r\n        {getEmailsService &&\r\n          getEmailsService?.response?.map((email) => {\r\n            return (\r\n              <>\r\n                <Box\r\n                  style={{\r\n                    padding: \"0px 0px 0px 10px\",\r\n                    cursor: \"pointer\",\r\n                    background: \"#f2f6fc\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    size=\"small\"\r\n                    checked={selectedEmails.includes(email._id)}\r\n                  />\r\n                  {email.starred ? (\r\n                    <Star\r\n                      size=\"small\"\r\n                      style={{ marginRight: 10, color: \"#F8DE7E\" }}\r\n                      onClick={() => toggleStarredMails(email)}\r\n                    />\r\n                  ) : (\r\n                    <StarBorder\r\n                      size=\"small\"\r\n                      style={{ marginRight: 10 }}\r\n                      onClick={() => toggleStarredMails(email)}\r\n                    />\r\n                  )}\r\n\r\n                  <Box\r\n                    style={{ display: \"flex\", width: \"100%\" }}\r\n                    onClick={() =>\r\n                      navigate(routes.view.path, { state: { email: email } })\r\n                    }\r\n                  >\r\n                    <Text style={{ width: 200, overflow: \"hidden\" }}>\r\n                      {email.name}\r\n                    </Text>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 12,\r\n                        background: \"#ddd\",\r\n                        color: \"#222\",\r\n                        padding: \"0 4px\",\r\n                        borderRadius: 4,\r\n                        marginRight: 6,\r\n                      }}\r\n                    >\r\n                      Inbox\r\n                    </Typography>\r\n                    <Text>\r\n                      {email?.subject} {email.body && \"-\"} {email.body}\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        marginLeft: \"auto\",\r\n                        marginRight: 20,\r\n                        color: \"#5f6368\",\r\n                        fontSize: 12,\r\n                      }}\r\n                    >\r\n                      {new window.Date(email.date).getDate()}\r\n                      {new window.Date(email.date).toLocaleString(\"default\", {\r\n                        month: \"long\",\r\n                      })}\r\n                    </Text>\r\n                  </Box>\r\n                </Box>\r\n              </>\r\n            );\r\n          })}\r\n      </List>\r\n      {\r\n        getEmailsService?.response?.length===0 &&\r\n        <NoMails message={EMPTY_TABS[type]}/>\r\n      }\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const VIEWS = {\r\n    inbox: 'inbox',\r\n    starred: 'starred',\r\n    sent: 'sent',\r\n    drafts: 'drafts'\r\n}\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    }\r\n}","import axios from \"axios\";\r\n\r\n const API_URL='';\r\n\r\n \r\n const  API_GMAIL=async(urlObject, payload , type)=>{\r\n  \r\n\r\n   return await  axios({\r\n        method: urlObject.method,\r\n        url:`${API_URL}/${urlObject.endpoint}/${type}`,\r\n        data: payload\r\n        \r\n    })\r\n\r\n }\r\n\r\n export default API_GMAIL;","import { useState } from \"react\";\r\nimport API from \"../services/api\";\r\n\r\nconst useApi = (urlObject) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const call = async (payload ,type ='') => {\r\n    setResponse(null);\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const res = await API(urlObject, payload,type);\r\n  \r\n      setResponse(res.data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { call, error, isLoading, response };\r\n};\r\n\r\nexport default useApi;\r\n","export const API_URLS ={\r\n    saveSentEmail :{\r\n        endpoint:'save',\r\n        method:'POST'\r\n    },\r\n    getEmailFromType:{\r\n        endpoint:\"emails\",\r\n        method:\"GET\"\r\n    },\r\n    saveDraftEmails:{\r\n        endpoint:\"save-draft\",\r\n        method:\"POST\"\r\n    },\r\n    toggleStarredMails: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    },\r\n    moveEmailstoBin:{\r\n        endpoint:'bin',\r\n        method:'POST'\r\n    }\r\n}"],"names":["_ref","message","_jsxs","Box","sx","display","alignItems","flexDirection","marginTop","opacity","children","_jsx","Typography","heading","subHeading","Divider","Text","styled","_templateObject","_taggedTemplateLiteral","_getEmailsService$res2","_getEmailsService$res3","navigate","useNavigate","openDrawer","useOutletContext","toggleStarredService","useApi","API_URLS","toggleStarredMails","type","useParams","_useState","useState","_useState2","_slicedToArray","selectedEmails","setSelectedEmails","_useState3","_useState4","refresh","setRefresh","getEmailsService","getEmailFromType","moveEmailsToBinServices","moveEmailstoBin","useEffect","call","email","id","_id","value","starred","prev","style","marginLeft","width","padding","Checkbox","size","onChange","e","target","checked","_getEmailsService$res","emails","response","map","selectedAllEmails","DeleteOutline","onClick","List","_Fragment","cursor","background","includes","Star","marginRight","color","StarBorder","routes","view","path","state","overflow","name","fontSize","borderRadius","subject","body","window","Date","date","getDate","toLocaleString","month","length","NoMails","EMPTY_TABS","gmailLogo","emptyProfilePic","inbox","drafts","sent","bin","API_GMAIL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlObject","payload","wrap","_context","next","axios","method","url","concat","endpoint","data","abrupt","stop","_x","_x2","_x3","apply","arguments","setResponse","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","undefined","API","t0","finish","saveSentEmail","saveDraftEmails"],"sourceRoot":""}